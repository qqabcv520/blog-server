package lol.mifan.myblog.po;
// Generated 2017-5-16 12:53:03 by Hibernate Tools 4.3.5.Final

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role", catalog = "mifanblog")
public class Role implements java.io.Serializable {

	private Integer id;
	private String name;
	private boolean deleted;
	private String note;
	private Set<Power> powers = new HashSet<Power>(0);
	private Set<Users> userses = new HashSet<Users>(0);

	public Role() {
	}

	public Role(boolean deleted) {
		this.deleted = deleted;
	}

	public Role(String name, boolean deleted, String note, Set<Power> powers, Set<Users> userses) {
		this.name = name;
		this.deleted = deleted;
		this.note = note;
		this.powers = powers;
		this.userses = userses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "deleted", nullable = false)
	public boolean isDeleted() {
		return this.deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	@Column(name = "note")
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "rolepower", catalog = "mifanblog", joinColumns = {
			@JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "power_id", nullable = false, updatable = false) })
	public Set<Power> getPowers() {
		return this.powers;
	}

	public void setPowers(Set<Power> powers) {
		this.powers = powers;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "userrole", catalog = "mifanblog", joinColumns = {
			@JoinColumn(name = "role_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_id", nullable = false, updatable = false) })
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

}
